{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\young\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Rmit_campus_map-main\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n// MapComponent.js\nimport React, { useEffect, useRef } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport axios from \"axios\";\nimport buildingCollection from './building_info/buildingCollection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map(\"map\", {\n        drawControl: true\n      }).setView([37.5665, 126.9780], 13);\n      const imageUrl = \"images/B2L2.png\";\n      const imageBounds = [[37.527, 126.83], [37.608, 127.13]];\n      L.imageOverlay(imageUrl, imageBounds).addTo(map);\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true\n        }\n      });\n      map.addControl(drawControl);\n      mapRef.current = map;\n      map.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n\n        // Drawn 폴리곤을 GeoJSON 파일로 저장\n        const geoJSON = drawnItems.current.toGeoJSON();\n        const stringifiedData = JSON.stringify(geoJSON, null, 2);\n        const blob = new Blob([stringifiedData], {\n          type: \"application/json\"\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.download = \"drawn_shape.geojson\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    }\n  }, []);\n  const saveShape = () => {\n    if (drawnItems.current) {\n      const geoJSON = drawnItems.current.toGeoJSON();\n      const stringifiedData = JSON.stringify(geoJSON, null, 2);\n      const blob = new Blob([stringifiedData], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"drawn_shape.geojson\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      axios.post(\"/api/save-shape\", {\n        shapeData: geoJSON\n      }).then(response => {\n        console.log(response.data.message);\n      }).catch(error => {\n        console.error(\"Error saving shape:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"620px\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveShape,\n      children: \"Save Shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"1Ytz2Uzsxv68ai9tuLcWsLQTlGc=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","axios","buildingCollection","jsxDEV","_jsxDEV","MapComponent","_s","mapRef","drawnItems","current","map","drawControl","setView","imageUrl","imageBounds","imageOverlay","addTo","FeatureGroup","addLayer","Control","Draw","edit","featureGroup","draw","polygon","polyline","circle","marker","circlemarker","rectangle","addControl","on","Event","CREATED","event","layer","geoJSON","toGeoJSON","stringifiedData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","saveShape","post","shapeData","then","response","console","log","data","message","catch","error","children","id","style","height","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/young/OneDrive/바탕 화면/Rmit_campus_map-main/frontend/src/MapComponent.js"],"sourcesContent":["// MapComponent.js\nimport React, { useEffect, useRef } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport axios from \"axios\";\nimport buildingCollection from './building_info/buildingCollection';\n\nfunction MapComponent() {\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map(\"map\", { drawControl: true }).setView(\n        [37.5665, 126.9780],\n        13\n      );\n\n      const imageUrl = \"images/B2L2.png\";\n      const imageBounds = [\n        [37.527, 126.83],\n        [37.608, 127.13],\n      ];\n\n      L.imageOverlay(imageUrl, imageBounds).addTo(map);\n\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current,\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true,\n        },\n      });\n      map.addControl(drawControl);\n\n      mapRef.current = map;\n\n      map.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n\n        // Drawn 폴리곤을 GeoJSON 파일로 저장\n        const geoJSON = drawnItems.current.toGeoJSON();\n        const stringifiedData = JSON.stringify(geoJSON, null, 2);\n\n        const blob = new Blob([stringifiedData], { type: \"application/json\" });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.download = \"drawn_shape.geojson\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n    }\n  }, []);\n\n  const saveShape = () => {\n    if (drawnItems.current) {\n      const geoJSON = drawnItems.current.toGeoJSON();\n      const stringifiedData = JSON.stringify(geoJSON, null, 2);\n\n      const blob = new Blob([stringifiedData], { type: \"application/json\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"drawn_shape.geojson\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      axios\n        .post(\"/api/save-shape\", { shapeData: geoJSON })\n        .then((response) => {\n          console.log(response.data.message);\n        })\n        .catch((error) => {\n          console.error(\"Error saving shape:\", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: \"620px\", margin: \"auto\" }}></div>\n      <button onClick={saveShape}>Save Shape</button>\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}