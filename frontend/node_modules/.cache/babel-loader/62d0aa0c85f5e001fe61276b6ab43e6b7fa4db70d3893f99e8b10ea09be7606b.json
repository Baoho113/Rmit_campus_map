{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\young\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Rmit_campus_map-main\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n// MapComponent.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  const [geoJsonPath, setGeoJsonPath] = useState(\"\");\n  const [geoJson, setGeoJson] = useState(null);\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map(\"map\", {\n        drawControl: true\n      }).setView([37.5665, 126.9780], 13);\n      const imageUrl = \"images/B2L2.png\";\n      const imageBounds = [[37.527, 126.83], [37.608, 127.13]];\n      L.imageOverlay(imageUrl, imageBounds).addTo(map);\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true\n        }\n      });\n      map.addControl(drawControl);\n      mapRef.current = map;\n      map.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n        const geoJSON = drawnItems.current.toGeoJSON();\n        setGeoJson(geoJSON);\n      });\n    }\n  }, []);\n  const saveShape = async () => {\n    if (geoJson) {\n      try {\n        // Save GeoJSON to the server\n        const response = await axios.post(\"/api/save-shape\", {\n          shapeData: geoJson\n        });\n\n        // Set the returned GeoJSON path\n        setGeoJsonPath(response.data.geoJsonPath);\n        console.log(response.data.message);\n      } catch (error) {\n        console.error(\"Error saving shape:\", error);\n      }\n    }\n  };\n\n  // Load GeoJSON from the server when the component mounts\n  useEffect(() => {\n    const loadGeoJson = async () => {\n      try {\n        const response = await axios.get(\"/api/load-shape\");\n        setGeoJsonPath(response.data.geoJsonPath);\n      } catch (error) {\n        console.error(\"Error loading shape:\", error);\n      }\n    };\n    loadGeoJson();\n  }, []);\n\n  // Render the GeoJSON layer\n  useEffect(() => {\n    if (geoJsonPath) {\n      axios.get(geoJsonPath).then(response => {\n        const geoJSON = response.data;\n        L.geoJSON(geoJSON).addTo(mapRef.current);\n      });\n    }\n  }, [geoJsonPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"620px\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveShape,\n      children: \"Save Shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"s5s4vhu19GYWItP6iuvQgtcmnS0=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","axios","jsxDEV","_jsxDEV","MapComponent","_s","mapRef","drawnItems","geoJsonPath","setGeoJsonPath","geoJson","setGeoJson","current","map","drawControl","setView","imageUrl","imageBounds","imageOverlay","addTo","FeatureGroup","addLayer","Control","Draw","edit","featureGroup","draw","polygon","polyline","circle","marker","circlemarker","rectangle","addControl","on","Event","CREATED","event","layer","geoJSON","toGeoJSON","saveShape","response","post","shapeData","data","console","log","message","error","loadGeoJson","get","then","children","id","style","height","margin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/young/OneDrive/바탕 화면/Rmit_campus_map-main/frontend/src/MapComponent.js"],"sourcesContent":["// MapComponent.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport \"leaflet-draw\";\nimport axios from \"axios\";\n\nfunction MapComponent() {\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  const [geoJsonPath, setGeoJsonPath] = useState(\"\");\n  const [geoJson, setGeoJson] = useState(null);\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map(\"map\", { drawControl: true }).setView(\n        [37.5665, 126.9780],\n        13\n      );\n\n      const imageUrl = \"images/B2L2.png\";\n      const imageBounds = [\n        [37.527, 126.83],\n        [37.608, 127.13],\n      ];\n\n      L.imageOverlay(imageUrl, imageBounds).addTo(map);\n\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current,\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true,\n        },\n      });\n      map.addControl(drawControl);\n\n      mapRef.current = map;\n\n      map.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n\n        const geoJSON = drawnItems.current.toGeoJSON();\n        setGeoJson(geoJSON);\n      });\n    }\n  }, []);\n\n  const saveShape = async () => {\n    if (geoJson) {\n      try {\n        // Save GeoJSON to the server\n        const response = await axios.post(\"/api/save-shape\", {\n          shapeData: geoJson,\n        });\n\n        // Set the returned GeoJSON path\n        setGeoJsonPath(response.data.geoJsonPath);\n\n        console.log(response.data.message);\n      } catch (error) {\n        console.error(\"Error saving shape:\", error);\n      }\n    }\n  };\n\n  // Load GeoJSON from the server when the component mounts\n  useEffect(() => {\n    const loadGeoJson = async () => {\n      try {\n        const response = await axios.get(\"/api/load-shape\");\n        setGeoJsonPath(response.data.geoJsonPath);\n      } catch (error) {\n        console.error(\"Error loading shape:\", error);\n      }\n    };\n\n    loadGeoJson();\n  }, []);\n\n  // Render the GeoJSON layer\n  useEffect(() => {\n    if (geoJsonPath) {\n      axios.get(geoJsonPath).then((response) => {\n        const geoJSON = response.data;\n        L.geoJSON(geoJSON).addTo(mapRef.current);\n      });\n    }\n  }, [geoJsonPath]);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: \"620px\", margin: \"auto\" }}></div>\n      <button onClick={saveShape}>Save Shape</button>\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}