{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\nfunction MapComponent() {\n  _s();\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map('map').setView([10.7298, 106.69451], 20);\n\n      // Define the bounds for the B2L2 image to be centered\n      const imageBounds = [[centerLat - height / 2, centerLng - width / 2], [centerLat + height / 2, centerLng + width / 2]];\n\n      // Use L.imageOverlay to add the B2L2 image and center it\n      const imageOverlay = L.imageOverlay('/images/B2L2.png', imageBounds).addTo(map);\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true\n        }\n      });\n      map.addControl(drawControl);\n      mapRef.current = map;\n      map.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n      });\n    }\n  }, []);\n\n  // Define the center and size of the B2L2 image\n  const centerLat = 10.7298;\n  const centerLng = 106.69451;\n  drawnItems.current = new L.FeatureGroup();\n  map.addLayer(drawnItems.current);\n  const drawControl = new L.Control.Draw({\n    edit: {\n      featureGroup: drawnItems.current\n    },\n    draw: {\n      polygon: true,\n      polyline: true,\n      circle: false,\n      marker: true,\n      circlemarker: false,\n      rectangle: true\n    }\n  });\n  map.addControl(drawControl);\n  mapRef.current = map;\n  map.on(L.Draw.Event.CREATED, event => {\n    const layer = event.layer;\n    drawnItems.current.addLayer(layer);\n  });\n}\n_s(MapComponent, \"1Ytz2Uzsxv68ai9tuLcWsLQTlGc=\");\n_c = MapComponent;\nconst saveShape = () => {\n  if (drawnItems.current) {\n    const geoJSON = drawnItems.current.toGeoJSON();\n    const stringifiedData = JSON.stringify(geoJSON, null, 2);\n    const blob = new Blob([stringifiedData], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'drawn_shape.geojson';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n    // axios.post('/api/save-shape', { shapeData: geoJSON })\n    //   .then(response => {\n    //     console.log(response.data.message);\n    //   })\n    //   .catch(error => {\n    //     console.error('Error saving shape:', error);\n    //   });\n  }\n};\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","axios","MapComponent","_s","mapRef","drawnItems","current","map","setView","imageBounds","centerLat","height","centerLng","width","imageOverlay","addTo","FeatureGroup","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","polyline","circle","marker","circlemarker","rectangle","addControl","on","Event","CREATED","event","layer","_c","saveShape","geoJSON","toGeoJSON","stringifiedData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","$RefreshReg$"],"sources":["C:/Users/young/OneDrive/바탕 화면/Rmit_campus_map/frontend/src/MapComponent.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\n\n\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\n\nfunction MapComponent() {\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map('map').setView([10.7298, 106.69451], 20);\n  \n      // Define the bounds for the B2L2 image to be centered\n      const imageBounds = [[centerLat - height / 2, centerLng - width / 2], [centerLat + height / 2, centerLng + width / 2]];\n  \n      // Use L.imageOverlay to add the B2L2 image and center it\n      const imageOverlay = L.imageOverlay('/images/B2L2.png', imageBounds).addTo(map);\n  \n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n  \n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current,\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true,\n        },\n      });\n      map.addControl(drawControl);\n  \n      mapRef.current = map;\n  \n      map.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n      });\n    }\n  }, []);\n  \n  // Define the center and size of the B2L2 image\n  const centerLat = 10.7298;\n  const centerLng = 106.69451;\n\n\n\n  \n\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current,\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true,\n        },\n      });\n      map.addControl(drawControl);\n\n      mapRef.current = map;\n\n      map.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n      });\n    }\n\n\n  const saveShape = () => {\n    if (drawnItems.current) {\n      const geoJSON = drawnItems.current.toGeoJSON();\n      const stringifiedData = JSON.stringify(geoJSON, null, 2);\n\n      const blob = new Blob([stringifiedData], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'drawn_shape.geojson';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // axios.post('/api/save-shape', { shapeData: geoJSON })\n      //   .then(response => {\n      //     console.log(response.data.message);\n      //   })\n      //   .catch(error => {\n      //     console.error('Error saving shape:', error);\n      //   });\n    }\n  };\n\n\n\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}