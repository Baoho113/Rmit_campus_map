{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\nimport GeoJSONMap from './GeoJSONMap';\nfunction MapComponent() {\n  _s();\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [0, 0],\n      // 이미지의 중심 좌표 설정\n      zoom: 1,\n      // 이미지가 맵 전체에 꽉 차게 표시되도록 축소 레벨 설정\n      crs: L.CRS.Simple // 이미지 크기를 실제 좌표로 사용하도록 설정\n    });\n\n    // B2L2 이미지를 맵에 추가하고 맵의 크기를 이미지에 맞게 조절합니다.\n    const b2l2ImageBounds = [[0, 0],\n    // 이미지의 좌측 상단 좌표\n    [100, 100] // 이미지의 우측 하단 좌표 (임의의 값, 이미지 크기에 맞게 조절하세요)\n    ];\n    L.imageOverlay(\"images/B2L2.png\", b2l2ImageBounds).addTo(mapRef.current);\n    mapRef.current.fitBounds(b2l2ImageBounds);\n    return () => {\n      mapRef.current.remove();\n    };\n  }, []);\n}\n_s(MapComponent, \"1Ytz2Uzsxv68ai9tuLcWsLQTlGc=\");\n_c = MapComponent;\n;\nexport default GeoJSONMap;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","axios","GeoJSONMap","MapComponent","_s","mapRef","drawnItems","current","map","center","zoom","crs","CRS","Simple","b2l2ImageBounds","imageOverlay","addTo","fitBounds","remove","_c","$RefreshReg$"],"sources":["C:/Users/young/OneDrive/바탕 화면/Rmit_campus_map/frontend/src/MapComponent.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\n\n\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\nimport GeoJSONMap from './GeoJSONMap';\n\nfunction MapComponent() {\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n\n  useEffect(() => {\n    mapRef.current = L.map(\"map\", {\n      center: [0, 0], // 이미지의 중심 좌표 설정\n      zoom: 1,        // 이미지가 맵 전체에 꽉 차게 표시되도록 축소 레벨 설정\n      crs: L.CRS.Simple, // 이미지 크기를 실제 좌표로 사용하도록 설정\n    });\n\n    // B2L2 이미지를 맵에 추가하고 맵의 크기를 이미지에 맞게 조절합니다.\n    const b2l2ImageBounds = [\n      [0, 0],       // 이미지의 좌측 상단 좌표\n      [100, 100]    // 이미지의 우측 하단 좌표 (임의의 값, 이미지 크기에 맞게 조절하세요)\n    ];\n\n    L.imageOverlay(\"images/B2L2.png\", b2l2ImageBounds).addTo(mapRef.current);\n    mapRef.current.fitBounds(b2l2ImageBounds);\n\n    return () => {\n      mapRef.current.remove();\n    };\n  }, []);\n\n\n};\n\nexport default GeoJSONMap;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,oCAAoC;AAC3C,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMO,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACdO,MAAM,CAACE,OAAO,GAAGP,CAAC,CAACQ,GAAG,CAAC,KAAK,EAAE;MAC5BC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAAE;MAChBC,IAAI,EAAE,CAAC;MAAS;MAChBC,GAAG,EAAEX,CAAC,CAACY,GAAG,CAACC,MAAM,CAAE;IACrB,CAAC,CAAC;;IAEF;IACA,MAAMC,eAAe,GAAG,CACtB,CAAC,CAAC,EAAE,CAAC,CAAC;IAAQ;IACd,CAAC,GAAG,EAAE,GAAG,CAAC,CAAI;IAAA,CACf;IAEDd,CAAC,CAACe,YAAY,CAAC,iBAAiB,EAAED,eAAe,CAAC,CAACE,KAAK,CAACX,MAAM,CAACE,OAAO,CAAC;IACxEF,MAAM,CAACE,OAAO,CAACU,SAAS,CAACH,eAAe,CAAC;IAEzC,OAAO,MAAM;MACXT,MAAM,CAACE,OAAO,CAACW,MAAM,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AAGR;AAACd,EAAA,CA1BQD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AA0BpB;AAED,eAAeD,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}