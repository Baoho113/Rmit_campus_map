{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ga020\\\\OneDrive\\\\Desktop\\\\\\u3000\\u3000\\\\Building IT Systems\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\nimport React, { useEffect, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const [drawnItems, setDrawnItems] = useState(null);\n  const saveGeoJSONToFile = () => {\n    if (drawnItems) {\n      const geoJSON = JSON.stringify(drawnItems);\n      const blob = new Blob([geoJSON], {\n        type: 'application/json'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'shape_data.geojson';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  useEffect(() => {\n    const map = L.map('map').setView([51.505, -0.09], 13);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(map);\n    const drawnItems = new L.FeatureGroup();\n    map.addLayer(drawnItems);\n    const drawControl = new L.Control.Draw({\n      edit: {\n        featureGroup: drawnItems\n      },\n      draw: {\n        polygon: true,\n        polyline: false,\n        circle: false,\n        marker: false,\n        circlemarker: false,\n        rectangle: true\n      }\n    });\n    map.addControl(drawControl);\n    map.on(L.Draw.Event.CREATED, event => {\n      const {\n        layer\n      } = event;\n      drawnItems.addLayer(layer);\n      setDrawnItems(drawnItems.toGeoJSON());\n    });\n    return () => {\n      map.off(L.Draw.Event.CREATED);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveGeoJSONToFile,\n      children: \"Save Shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"2J+P50GWPshHO43id+rWYOJo1Zo=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","L","jsxDEV","_jsxDEV","MapComponent","_s","drawnItems","setDrawnItems","saveGeoJSONToFile","geoJSON","JSON","stringify","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","map","setView","tileLayer","attribution","addTo","FeatureGroup","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","polyline","circle","marker","circlemarker","rectangle","addControl","on","Event","CREATED","event","layer","toGeoJSON","off","children","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ga020/OneDrive/Desktop/　　/Building IT Systems/frontend/src/MapComponent.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import \"leaflet/dist/leaflet.css\";\r\n// import L from \"leaflet\";\r\n\r\n// function MapComponent() {\r\n//   useEffect(() => {\r\n//     const mapElement = document.getElementById(\"map\");\r\n//     if (mapElement && !mapElement._leaflet_id) {\r\n//       // Check if map is not already initialized\r\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\r\n\r\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n//         attribution: \"© OpenStreetMap contributors\",\r\n//       }).addTo(map);\r\n//     }\r\n//   }, []);\r\n\r\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\r\n// }\r\n\r\n// export default MapComponent;\r\n\r\n// 클라이언트(MapComponent.js) 측\r\nimport React, { useEffect, useState } from 'react';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\nfunction MapComponent() {\r\n  const [drawnItems, setDrawnItems] = useState(null);\r\n\r\n  const saveGeoJSONToFile = () => {\r\n    if (drawnItems) {\r\n      const geoJSON = JSON.stringify(drawnItems);\r\n      const blob = new Blob([geoJSON], { type: 'application/json' });\r\n\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = 'shape_data.geojson';\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const map = L.map('map').setView([51.505, -0.09], 13);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '© OpenStreetMap contributors',\r\n    }).addTo(map);\r\n\r\n    const drawnItems = new L.FeatureGroup();\r\n    map.addLayer(drawnItems);\r\n\r\n    const drawControl = new L.Control.Draw({\r\n      edit: {\r\n        featureGroup: drawnItems,\r\n      },\r\n      draw: {\r\n        polygon: true,\r\n        polyline: false,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n        rectangle: true,\r\n      },\r\n    });\r\n    map.addControl(drawControl);\r\n\r\n    map.on(L.Draw.Event.CREATED, (event) => {\r\n      const { layer } = event;\r\n      drawnItems.addLayer(layer);\r\n      setDrawnItems(drawnItems.toGeoJSON());\r\n    });\r\n\r\n    return () => {\r\n      map.off(L.Draw.Event.CREATED);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"map\" style={{ height: '500px' }}></div>\r\n      <button onClick={saveGeoJSONToFile}>Save Shape</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}