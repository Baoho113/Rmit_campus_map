{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\young\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Rmit_campus_map\\\\frontend\\\\src\\\\MapComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent() {\n  _s();\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map('map').setView([10.7298, 106.69451], 20);\n      L.tileLayer('/images/B2L2.png', {\n        attribution: '© OpenStreetMap contributors'\n      }).addTo(map);\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true\n        }\n      });\n      map.addControl(drawControl);\n      mapRef.current = map;\n      map.on(L.Draw.Event.CREATED, event => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n      });\n    }\n  }, []);\n  const saveShape = () => {\n    if (drawnItems.current) {\n      const geoJSON = drawnItems.current.toGeoJSON();\n      const stringifiedData = JSON.stringify(geoJSON, null, 2);\n      const blob = new Blob([stringifiedData], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'drawn_shape.geojson';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // axios.post('/api/save-shape', { shapeData: geoJSON })\n      //   .then(response => {\n      //     console.log(response.data.message);\n      //   })\n      //   .catch(error => {\n      //     console.error('Error saving shape:', error);\n      //   });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveShape,\n      children: \"Save Shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"1Ytz2Uzsxv68ai9tuLcWsLQTlGc=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","axios","jsxDEV","_jsxDEV","MapComponent","_s","mapRef","drawnItems","current","map","setView","tileLayer","attribution","addTo","FeatureGroup","addLayer","drawControl","Control","Draw","edit","featureGroup","draw","polygon","polyline","circle","marker","circlemarker","rectangle","addControl","on","Event","CREATED","event","layer","saveShape","geoJSON","toGeoJSON","stringifiedData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","children","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/young/OneDrive/바탕 화면/Rmit_campus_map/frontend/src/MapComponent.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import \"leaflet/dist/leaflet.css\";\n// import L from \"leaflet\";\n\n// function MapComponent() {\n//   useEffect(() => {\n//     const mapElement = document.getElementById(\"map\");\n//     if (mapElement && !mapElement._leaflet_id) {\n//       // Check if map is not already initialized\n//       const map = L.map(\"map\").setView([10.7298, 106.69451], 20); // RMIT Vietnam Ho Chi Minh Campus coordinates\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"© OpenStreetMap contributors\",\n//       }).addTo(map);\n//     }\n//   }, []);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// }\n\n// export default MapComponent;\n\n// 클라이언트(MapComponent.js) 측\n\n\n\n\nimport React, { useEffect, useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw';\nimport axios from 'axios';\n\nfunction MapComponent() {\n  const mapRef = useRef(null);\n  const drawnItems = useRef(null);\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      const map = L.map('map').setView([10.7298, 106.69451], 20);\n      L.tileLayer('/images/B2L2.png', {\n        attribution: '© OpenStreetMap contributors',\n      }).addTo(map);\n\n      drawnItems.current = new L.FeatureGroup();\n      map.addLayer(drawnItems.current);\n\n      const drawControl = new L.Control.Draw({\n        edit: {\n          featureGroup: drawnItems.current,\n        },\n        draw: {\n          polygon: true,\n          polyline: true,\n          circle: false,\n          marker: true,\n          circlemarker: false,\n          rectangle: true,\n        },\n      });\n      map.addControl(drawControl);\n\n      mapRef.current = map;\n\n      map.on(L.Draw.Event.CREATED, (event) => {\n        const layer = event.layer;\n        drawnItems.current.addLayer(layer);\n      });\n    }\n  }, []);\n\n  const saveShape = () => {\n    if (drawnItems.current) {\n      const geoJSON = drawnItems.current.toGeoJSON();\n      const stringifiedData = JSON.stringify(geoJSON, null, 2);\n\n      const blob = new Blob([stringifiedData], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'drawn_shape.geojson';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // axios.post('/api/save-shape', { shapeData: geoJSON })\n      //   .then(response => {\n      //     console.log(response.data.message);\n      //   })\n      //   .catch(error => {\n      //     console.error('Error saving shape:', error);\n      //   });\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: '500px' }}></div>\n      <button onClick={saveShape}>Save Shape</button>\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}