{"ast":null,"code":"(function () {\n  var gju = this.gju = {};\n\n  // Export the geojson object for **CommonJS**\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = gju;\n  }\n\n  // adapted from http://www.kevlindev.com/gui/math/intersection/Intersection.js\n  gju.lineStringsIntersect = function (l1, l2) {\n    var intersects = [];\n    for (var i = 0; i <= l1.coordinates.length - 2; ++i) {\n      for (var j = 0; j <= l2.coordinates.length - 2; ++j) {\n        var a1 = {\n            x: l1.coordinates[i][1],\n            y: l1.coordinates[i][0]\n          },\n          a2 = {\n            x: l1.coordinates[i + 1][1],\n            y: l1.coordinates[i + 1][0]\n          },\n          b1 = {\n            x: l2.coordinates[j][1],\n            y: l2.coordinates[j][0]\n          },\n          b2 = {\n            x: l2.coordinates[j + 1][1],\n            y: l2.coordinates[j + 1][0]\n          },\n          ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n          ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n          u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (u_b != 0) {\n          var ua = ua_t / u_b,\n            ub = ub_t / u_b;\n          if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n            intersects.push({\n              'type': 'Point',\n              'coordinates': [a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)]\n            });\n          }\n        }\n      }\n    }\n    if (intersects.length == 0) intersects = false;\n    return intersects;\n  };\n\n  // Bounding Box\n\n  function boundingBoxAroundPolyCoords(coords) {\n    var xAll = [],\n      yAll = [];\n    for (var i = 0; i < coords[0].length; i++) {\n      xAll.push(coords[0][i][1]);\n      yAll.push(coords[0][i][0]);\n    }\n    xAll = xAll.sort(function (a, b) {\n      return a - b;\n    });\n    yAll = yAll.sort(function (a, b) {\n      return a - b;\n    });\n    return [[xAll[0], yAll[0]], [xAll[xAll.length - 1], yAll[yAll.length - 1]]];\n  }\n  gju.pointInBoundingBox = function (point, bounds) {\n    return !(point.coordinates[1] < bounds[0][0] || point.coordinates[1] > bounds[1][0] || point.coordinates[0] < bounds[0][1] || point.coordinates[0] > bounds[1][1]);\n  };\n\n  // Point in Polygon\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html#Listing the Vertices\n\n  function pnpoly(x, y, coords) {\n    var vert = [[0, 0]];\n    for (var i = 0; i < coords.length; i++) {\n      for (var j = 0; j < coords[i].length; j++) {\n        vert.push(coords[i][j]);\n      }\n      vert.push(coords[i][0]);\n      vert.push([0, 0]);\n    }\n    var inside = false;\n    for (var i = 0, j = vert.length - 1; i < vert.length; j = i++) {\n      if (vert[i][0] > y != vert[j][0] > y && x < (vert[j][1] - vert[i][1]) * (y - vert[i][0]) / (vert[j][0] - vert[i][0]) + vert[i][1]) inside = !inside;\n    }\n    return inside;\n  }\n  gju.pointInPolygon = function (p, poly) {\n    var coords = poly.type == \"Polygon\" ? [poly.coordinates] : poly.coordinates;\n    var insideBox = false;\n    for (var i = 0; i < coords.length; i++) {\n      if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[i]))) insideBox = true;\n    }\n    if (!insideBox) return false;\n    var insidePoly = false;\n    for (var i = 0; i < coords.length; i++) {\n      if (pnpoly(p.coordinates[1], p.coordinates[0], coords[i])) insidePoly = true;\n    }\n    return insidePoly;\n  };\n\n  // support multi (but not donut) polygons\n  gju.pointInMultiPolygon = function (p, poly) {\n    var coords_array = poly.type == \"MultiPolygon\" ? [poly.coordinates] : poly.coordinates;\n    var insideBox = false;\n    var insidePoly = false;\n    for (var i = 0; i < coords_array.length; i++) {\n      var coords = coords_array[i];\n      for (var j = 0; j < coords.length; j++) {\n        if (!insideBox) {\n          if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[j]))) {\n            insideBox = true;\n          }\n        }\n      }\n      if (!insideBox) return false;\n      for (var j = 0; j < coords.length; j++) {\n        if (!insidePoly) {\n          if (pnpoly(p.coordinates[1], p.coordinates[0], coords[j])) {\n            insidePoly = true;\n          }\n        }\n      }\n    }\n    return insidePoly;\n  };\n  gju.numberToRadius = function (number) {\n    return number * Math.PI / 180;\n  };\n  gju.numberToDegree = function (number) {\n    return number * 180 / Math.PI;\n  };\n\n  // written with help from @tautologe\n  gju.drawCircle = function (radiusInMeters, centerPoint, steps) {\n    var center = [centerPoint.coordinates[1], centerPoint.coordinates[0]],\n      dist = radiusInMeters / 1000 / 6371,\n      // convert meters to radiant\n      radCenter = [gju.numberToRadius(center[0]), gju.numberToRadius(center[1])],\n      steps = steps || 15,\n      // 15 sided circle\n      poly = [[center[0], center[1]]];\n    for (var i = 0; i < steps; i++) {\n      var brng = 2 * Math.PI * i / steps;\n      var lat = Math.asin(Math.sin(radCenter[0]) * Math.cos(dist) + Math.cos(radCenter[0]) * Math.sin(dist) * Math.cos(brng));\n      var lng = radCenter[1] + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(radCenter[0]), Math.cos(dist) - Math.sin(radCenter[0]) * Math.sin(lat));\n      poly[i] = [];\n      poly[i][1] = gju.numberToDegree(lat);\n      poly[i][0] = gju.numberToDegree(lng);\n    }\n    return {\n      \"type\": \"Polygon\",\n      \"coordinates\": [poly]\n    };\n  };\n\n  // assumes rectangle starts at lower left point\n  gju.rectangleCentroid = function (rectangle) {\n    var bbox = rectangle.coordinates[0];\n    var xmin = bbox[0][0],\n      ymin = bbox[0][1],\n      xmax = bbox[2][0],\n      ymax = bbox[2][1];\n    var xwidth = xmax - xmin;\n    var ywidth = ymax - ymin;\n    return {\n      'type': 'Point',\n      'coordinates': [xmin + xwidth / 2, ymin + ywidth / 2]\n    };\n  };\n\n  // from http://www.movable-type.co.uk/scripts/latlong.html\n  gju.pointDistance = function (pt1, pt2) {\n    var lon1 = pt1.coordinates[0],\n      lat1 = pt1.coordinates[1],\n      lon2 = pt2.coordinates[0],\n      lat2 = pt2.coordinates[1],\n      dLat = gju.numberToRadius(lat2 - lat1),\n      dLon = gju.numberToRadius(lon2 - lon1),\n      a = Math.pow(Math.sin(dLat / 2), 2) + Math.cos(gju.numberToRadius(lat1)) * Math.cos(gju.numberToRadius(lat2)) * Math.pow(Math.sin(dLon / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return 6371 * c * 1000; // returns meters\n  },\n  // checks if geometry lies entirely within a circle\n  // works with Point, LineString, Polygon\n  gju.geometryWithinRadius = function (geometry, center, radius) {\n    if (geometry.type == 'Point') {\n      return gju.pointDistance(geometry, center) <= radius;\n    } else if (geometry.type == 'LineString' || geometry.type == 'Polygon') {\n      var point = {};\n      var coordinates;\n      if (geometry.type == 'Polygon') {\n        // it's enough to check the exterior ring of the Polygon\n        coordinates = geometry.coordinates[0];\n      } else {\n        coordinates = geometry.coordinates;\n      }\n      for (var i in coordinates) {\n        point.coordinates = coordinates[i];\n        if (gju.pointDistance(point, center) > radius) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.area = function (polygon) {\n    var area = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      area += p1.x * p2.y;\n      area -= p1.y * p2.x;\n    }\n    area /= 2;\n    return area;\n  },\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.centroid = function (polygon) {\n    var f,\n      x = 0,\n      y = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      f = p1.x * p2.y - p2.x * p1.y;\n      x += (p1.x + p2.x) * f;\n      y += (p1.y + p2.y) * f;\n    }\n    f = gju.area(polygon) * 6;\n    return {\n      'type': 'Point',\n      'coordinates': [y / f, x / f]\n    };\n  }, gju.simplify = function (source, kink) {\n    /* source[] array of geojson points */\n    /* kink\tin metres, kinks above this depth kept  */\n    /* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n    kink = kink || 20;\n    source = source.map(function (o) {\n      return {\n        lng: o.coordinates[0],\n        lat: o.coordinates[1]\n      };\n    });\n    var n_source, n_stack, n_dest, start, end, i, sig;\n    var dev_sqr, max_dev_sqr, band_sqr;\n    var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n    var F = Math.PI / 180.0 * 0.5;\n    var index = new Array(); /* aray of indexes of source points to include in the reduced line */\n    var sig_start = new Array(); /* indices of start & end of working section */\n    var sig_end = new Array();\n\n    /* check for simple cases */\n\n    if (source.length < 3) return source; /* one or two points */\n\n    /* more complex case. initialize stack */\n\n    n_source = source.length;\n    band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0); /* Now in degrees */\n    band_sqr *= band_sqr;\n    n_dest = 0;\n    sig_start[0] = 0;\n    sig_end[0] = n_source - 1;\n    n_stack = 1;\n\n    /* while the stack is not empty  ... */\n    while (n_stack > 0) {\n      /* ... pop the top-most entries off the stacks */\n\n      start = sig_start[n_stack - 1];\n      end = sig_end[n_stack - 1];\n      n_stack--;\n      if (end - start > 1) {\n        /* any intermediate points ? */\n\n        /* ... yes, so find most deviant intermediate point to\n        either side of line joining start & end points */\n\n        x12 = source[end].lng() - source[start].lng();\n        y12 = source[end].lat() - source[start].lat();\n        if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);\n        x12 *= Math.cos(F * (source[end].lat() + source[start].lat())); /* use avg lat to reduce lng */\n        d12 = x12 * x12 + y12 * y12;\n        for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {\n          x13 = source[i].lng() - source[start].lng();\n          y13 = source[i].lat() - source[start].lat();\n          if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);\n          x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));\n          d13 = x13 * x13 + y13 * y13;\n          x23 = source[i].lng() - source[end].lng();\n          y23 = source[i].lat() - source[end].lat();\n          if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);\n          x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n          d23 = x23 * x23 + y23 * y23;\n          if (d13 >= d12 + d23) dev_sqr = d23;else if (d23 >= d12 + d13) dev_sqr = d13;else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle\n          if (dev_sqr > max_dev_sqr) {\n            sig = i;\n            max_dev_sqr = dev_sqr;\n          }\n        }\n        if (max_dev_sqr < band_sqr) {\n          /* is there a sig. intermediate point ? */\n          /* ... no, so transfer current start point */\n          index[n_dest] = start;\n          n_dest++;\n        } else {\n          /* ... yes, so push two sub-sections on stack for further processing */\n          n_stack++;\n          sig_start[n_stack - 1] = sig;\n          sig_end[n_stack - 1] = end;\n          n_stack++;\n          sig_start[n_stack - 1] = start;\n          sig_end[n_stack - 1] = sig;\n        }\n      } else {\n        /* ... no intermediate points, so transfer current start point */\n        index[n_dest] = start;\n        n_dest++;\n      }\n    }\n\n    /* transfer last point */\n    index[n_dest] = n_source - 1;\n    n_dest++;\n\n    /* make return array */\n    var r = new Array();\n    for (var i = 0; i < n_dest; i++) r.push(source[index[i]]);\n    return r.map(function (o) {\n      return {\n        type: \"Point\",\n        coordinates: [o.lng, o.lat]\n      };\n    });\n  };\n\n  // http://www.movable-type.co.uk/scripts/latlong.html#destPoint\n  gju.destinationPoint = function (pt, brng, dist) {\n    dist = dist / 6371; // convert dist to angular distance in radians\n    brng = gju.numberToRadius(brng);\n    var lon1 = gju.numberToRadius(pt.coordinates[0]);\n    var lat1 = gju.numberToRadius(pt.coordinates[1]);\n    var lat2 = Math.asin(Math.sin(lat1) * Math.cos(dist) + Math.cos(lat1) * Math.sin(dist) * Math.cos(brng));\n    var lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(lat1), Math.cos(dist) - Math.sin(lat1) * Math.sin(lat2));\n    lon2 = (lon2 + 3 * Math.PI) % (2 * Math.PI) - Math.PI; // normalise to -180..+180º\n\n    return {\n      'type': 'Point',\n      'coordinates': [gju.numberToDegree(lon2), gju.numberToDegree(lat2)]\n    };\n  };\n})();","map":{"version":3,"names":["gju","module","exports","lineStringsIntersect","l1","l2","intersects","i","coordinates","length","j","a1","x","y","a2","b1","b2","ua_t","ub_t","u_b","ua","ub","push","boundingBoxAroundPolyCoords","coords","xAll","yAll","sort","a","b","pointInBoundingBox","point","bounds","pnpoly","vert","inside","pointInPolygon","p","poly","type","insideBox","insidePoly","pointInMultiPolygon","coords_array","numberToRadius","number","Math","PI","numberToDegree","drawCircle","radiusInMeters","centerPoint","steps","center","dist","radCenter","brng","lat","asin","sin","cos","lng","atan2","rectangleCentroid","rectangle","bbox","xmin","ymin","xmax","ymax","xwidth","ywidth","pointDistance","pt1","pt2","lon1","lat1","lon2","lat2","dLat","dLon","pow","c","sqrt","geometryWithinRadius","geometry","radius","area","polygon","points","p1","p2","centroid","f","simplify","source","kink","map","o","n_source","n_stack","n_dest","start","end","sig","dev_sqr","max_dev_sqr","band_sqr","x12","y12","d12","x13","y13","d13","x23","y23","d23","F","index","Array","sig_start","sig_end","abs","r","destinationPoint","pt"],"sources":["C:/Users/ga020/OneDrive/Desktop/　　/Building IT Systems/frontend/node_modules/geojson-utils/geojson-utils.js"],"sourcesContent":["(function () {\n  var gju = this.gju = {};\n\n  // Export the geojson object for **CommonJS**\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = gju;\n  }\n\n  // adapted from http://www.kevlindev.com/gui/math/intersection/Intersection.js\n  gju.lineStringsIntersect = function (l1, l2) {\n    var intersects = [];\n    for (var i = 0; i <= l1.coordinates.length - 2; ++i) {\n      for (var j = 0; j <= l2.coordinates.length - 2; ++j) {\n        var a1 = {\n          x: l1.coordinates[i][1],\n          y: l1.coordinates[i][0]\n        },\n          a2 = {\n            x: l1.coordinates[i + 1][1],\n            y: l1.coordinates[i + 1][0]\n          },\n          b1 = {\n            x: l2.coordinates[j][1],\n            y: l2.coordinates[j][0]\n          },\n          b2 = {\n            x: l2.coordinates[j + 1][1],\n            y: l2.coordinates[j + 1][0]\n          },\n          ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n          ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n          u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (u_b != 0) {\n          var ua = ua_t / u_b,\n            ub = ub_t / u_b;\n          if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n            intersects.push({\n              'type': 'Point',\n              'coordinates': [a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)]\n            });\n          }\n        }\n      }\n    }\n    if (intersects.length == 0) intersects = false;\n    return intersects;\n  }\n\n  // Bounding Box\n\n  function boundingBoxAroundPolyCoords (coords) {\n    var xAll = [], yAll = []\n\n    for (var i = 0; i < coords[0].length; i++) {\n      xAll.push(coords[0][i][1])\n      yAll.push(coords[0][i][0])\n    }\n\n    xAll = xAll.sort(function (a,b) { return a - b })\n    yAll = yAll.sort(function (a,b) { return a - b })\n\n    return [ [xAll[0], yAll[0]], [xAll[xAll.length - 1], yAll[yAll.length - 1]] ]\n  }\n\n  gju.pointInBoundingBox = function (point, bounds) {\n    return !(point.coordinates[1] < bounds[0][0] || point.coordinates[1] > bounds[1][0] || point.coordinates[0] < bounds[0][1] || point.coordinates[0] > bounds[1][1]) \n  }\n\n  // Point in Polygon\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html#Listing the Vertices\n\n  function pnpoly (x,y,coords) {\n    var vert = [ [0,0] ]\n\n    for (var i = 0; i < coords.length; i++) {\n      for (var j = 0; j < coords[i].length; j++) {\n        vert.push(coords[i][j])\n      }\n\t  vert.push(coords[i][0])\n      vert.push([0,0])\n    }\n\n    var inside = false\n    for (var i = 0, j = vert.length - 1; i < vert.length; j = i++) {\n      if (((vert[i][0] > y) != (vert[j][0] > y)) && (x < (vert[j][1] - vert[i][1]) * (y - vert[i][0]) / (vert[j][0] - vert[i][0]) + vert[i][1])) inside = !inside\n    }\n\n    return inside\n  }\n\n  gju.pointInPolygon = function (p, poly) {\n    var coords = (poly.type == \"Polygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    for (var i = 0; i < coords.length; i++) {\n      if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[i]))) insideBox = true\n    }\n    if (!insideBox) return false\n\n    var insidePoly = false\n    for (var i = 0; i < coords.length; i++) {\n      if (pnpoly(p.coordinates[1], p.coordinates[0], coords[i])) insidePoly = true\n    }\n\n    return insidePoly\n  }\n\n  // support multi (but not donut) polygons\n  gju.pointInMultiPolygon = function (p, poly) {\n    var coords_array = (poly.type == \"MultiPolygon\") ? [ poly.coordinates ] : poly.coordinates\n\n    var insideBox = false\n    var insidePoly = false\n    for (var i = 0; i < coords_array.length; i++){\n      var coords = coords_array[i];\n      for (var j = 0; j < coords.length; j++) {\n        if (!insideBox){\n          if (gju.pointInBoundingBox(p, boundingBoxAroundPolyCoords(coords[j]))) {\n            insideBox = true\n          }\n        }\n      }\n      if (!insideBox) return false\n      for (var j = 0; j < coords.length; j++) {\n        if (!insidePoly){\n          if (pnpoly(p.coordinates[1], p.coordinates[0], coords[j])) {\n            insidePoly = true\n          }\n        }\n      }\n    }\n\n    return insidePoly\n  }\n\n  gju.numberToRadius = function (number) {\n    return number * Math.PI / 180;\n  }\n\n  gju.numberToDegree = function (number) {\n    return number * 180 / Math.PI;\n  }\n\n  // written with help from @tautologe\n  gju.drawCircle = function (radiusInMeters, centerPoint, steps) {\n    var center = [centerPoint.coordinates[1], centerPoint.coordinates[0]],\n      dist = (radiusInMeters / 1000) / 6371,\n      // convert meters to radiant\n      radCenter = [gju.numberToRadius(center[0]), gju.numberToRadius(center[1])],\n      steps = steps || 15,\n      // 15 sided circle\n      poly = [[center[0], center[1]]];\n    for (var i = 0; i < steps; i++) {\n      var brng = 2 * Math.PI * i / steps;\n      var lat = Math.asin(Math.sin(radCenter[0]) * Math.cos(dist)\n              + Math.cos(radCenter[0]) * Math.sin(dist) * Math.cos(brng));\n      var lng = radCenter[1] + Math.atan2(Math.sin(brng) * Math.sin(dist) * Math.cos(radCenter[0]),\n                                          Math.cos(dist) - Math.sin(radCenter[0]) * Math.sin(lat));\n      poly[i] = [];\n      poly[i][1] = gju.numberToDegree(lat);\n      poly[i][0] = gju.numberToDegree(lng);\n    }\n    return {\n      \"type\": \"Polygon\",\n      \"coordinates\": [poly]\n    };\n  }\n\n  // assumes rectangle starts at lower left point\n  gju.rectangleCentroid = function (rectangle) {\n    var bbox = rectangle.coordinates[0];\n    var xmin = bbox[0][0],\n      ymin = bbox[0][1],\n      xmax = bbox[2][0],\n      ymax = bbox[2][1];\n    var xwidth = xmax - xmin;\n    var ywidth = ymax - ymin;\n    return {\n      'type': 'Point',\n      'coordinates': [xmin + xwidth / 2, ymin + ywidth / 2]\n    };\n  }\n\n  // from http://www.movable-type.co.uk/scripts/latlong.html\n  gju.pointDistance = function (pt1, pt2) {\n    var lon1 = pt1.coordinates[0],\n      lat1 = pt1.coordinates[1],\n      lon2 = pt2.coordinates[0],\n      lat2 = pt2.coordinates[1],\n      dLat = gju.numberToRadius(lat2 - lat1),\n      dLon = gju.numberToRadius(lon2 - lon1),\n      a = Math.pow(Math.sin(dLat / 2), 2) + Math.cos(gju.numberToRadius(lat1))\n        * Math.cos(gju.numberToRadius(lat2)) * Math.pow(Math.sin(dLon / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return (6371 * c) * 1000; // returns meters\n  },\n\n  // checks if geometry lies entirely within a circle\n  // works with Point, LineString, Polygon\n  gju.geometryWithinRadius = function (geometry, center, radius) {\n    if (geometry.type == 'Point') {\n      return gju.pointDistance(geometry, center) <= radius;\n    } else if (geometry.type == 'LineString' || geometry.type == 'Polygon') {\n      var point = {};\n      var coordinates;\n      if (geometry.type == 'Polygon') {\n        // it's enough to check the exterior ring of the Polygon\n        coordinates = geometry.coordinates[0];\n      } else {\n        coordinates = geometry.coordinates;\n      }\n      for (var i in coordinates) {\n        point.coordinates = coordinates[i];\n        if (gju.pointDistance(point, center) > radius) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.area = function (polygon) {\n    var area = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      area += p1.x * p2.y;\n      area -= p1.y * p2.x;\n    }\n\n    area /= 2;\n    return area;\n  },\n\n  // adapted from http://paulbourke.net/geometry/polyarea/javascript.txt\n  gju.centroid = function (polygon) {\n    var f, x = 0,\n      y = 0;\n    // TODO: polygon holes at coordinates[1]\n    var points = polygon.coordinates[0];\n    var j = points.length - 1;\n    var p1, p2;\n\n    for (var i = 0; i < points.length; j = i++) {\n      var p1 = {\n        x: points[i][1],\n        y: points[i][0]\n      };\n      var p2 = {\n        x: points[j][1],\n        y: points[j][0]\n      };\n      f = p1.x * p2.y - p2.x * p1.y;\n      x += (p1.x + p2.x) * f;\n      y += (p1.y + p2.y) * f;\n    }\n\n    f = gju.area(polygon) * 6;\n    return {\n      'type': 'Point',\n      'coordinates': [y / f, x / f]\n    };\n  },\n\n  gju.simplify = function (source, kink) { /* source[] array of geojson points */\n    /* kink\tin metres, kinks above this depth kept  */\n    /* kink depth is the height of the triangle abc where a-b and b-c are two consecutive line segments */\n    kink = kink || 20;\n    source = source.map(function (o) {\n      return {\n        lng: o.coordinates[0],\n        lat: o.coordinates[1]\n      }\n    });\n\n    var n_source, n_stack, n_dest, start, end, i, sig;\n    var dev_sqr, max_dev_sqr, band_sqr;\n    var x12, y12, d12, x13, y13, d13, x23, y23, d23;\n    var F = (Math.PI / 180.0) * 0.5;\n    var index = new Array(); /* aray of indexes of source points to include in the reduced line */\n    var sig_start = new Array(); /* indices of start & end of working section */\n    var sig_end = new Array();\n\n    /* check for simple cases */\n\n    if (source.length < 3) return (source); /* one or two points */\n\n    /* more complex case. initialize stack */\n\n    n_source = source.length;\n    band_sqr = kink * 360.0 / (2.0 * Math.PI * 6378137.0); /* Now in degrees */\n    band_sqr *= band_sqr;\n    n_dest = 0;\n    sig_start[0] = 0;\n    sig_end[0] = n_source - 1;\n    n_stack = 1;\n\n    /* while the stack is not empty  ... */\n    while (n_stack > 0) {\n\n      /* ... pop the top-most entries off the stacks */\n\n      start = sig_start[n_stack - 1];\n      end = sig_end[n_stack - 1];\n      n_stack--;\n\n      if ((end - start) > 1) { /* any intermediate points ? */\n\n        /* ... yes, so find most deviant intermediate point to\n        either side of line joining start & end points */\n\n        x12 = (source[end].lng() - source[start].lng());\n        y12 = (source[end].lat() - source[start].lat());\n        if (Math.abs(x12) > 180.0) x12 = 360.0 - Math.abs(x12);\n        x12 *= Math.cos(F * (source[end].lat() + source[start].lat())); /* use avg lat to reduce lng */\n        d12 = (x12 * x12) + (y12 * y12);\n\n        for (i = start + 1, sig = start, max_dev_sqr = -1.0; i < end; i++) {\n\n          x13 = source[i].lng() - source[start].lng();\n          y13 = source[i].lat() - source[start].lat();\n          if (Math.abs(x13) > 180.0) x13 = 360.0 - Math.abs(x13);\n          x13 *= Math.cos(F * (source[i].lat() + source[start].lat()));\n          d13 = (x13 * x13) + (y13 * y13);\n\n          x23 = source[i].lng() - source[end].lng();\n          y23 = source[i].lat() - source[end].lat();\n          if (Math.abs(x23) > 180.0) x23 = 360.0 - Math.abs(x23);\n          x23 *= Math.cos(F * (source[i].lat() + source[end].lat()));\n          d23 = (x23 * x23) + (y23 * y23);\n\n          if (d13 >= (d12 + d23)) dev_sqr = d23;\n          else if (d23 >= (d12 + d13)) dev_sqr = d13;\n          else dev_sqr = (x13 * y12 - y13 * x12) * (x13 * y12 - y13 * x12) / d12; // solve triangle\n          if (dev_sqr > max_dev_sqr) {\n            sig = i;\n            max_dev_sqr = dev_sqr;\n          }\n        }\n\n        if (max_dev_sqr < band_sqr) { /* is there a sig. intermediate point ? */\n          /* ... no, so transfer current start point */\n          index[n_dest] = start;\n          n_dest++;\n        } else { /* ... yes, so push two sub-sections on stack for further processing */\n          n_stack++;\n          sig_start[n_stack - 1] = sig;\n          sig_end[n_stack - 1] = end;\n          n_stack++;\n          sig_start[n_stack - 1] = start;\n          sig_end[n_stack - 1] = sig;\n        }\n      } else { /* ... no intermediate points, so transfer current start point */\n        index[n_dest] = start;\n        n_dest++;\n      }\n    }\n\n    /* transfer last point */\n    index[n_dest] = n_source - 1;\n    n_dest++;\n\n    /* make return array */\n    var r = new Array();\n    for (var i = 0; i < n_dest; i++)\n      r.push(source[index[i]]);\n\n    return r.map(function (o) {\n      return {\n        type: \"Point\",\n        coordinates: [o.lng, o.lat]\n      }\n    });\n  }\n\n  // http://www.movable-type.co.uk/scripts/latlong.html#destPoint\n  gju.destinationPoint = function (pt, brng, dist) {\n    dist = dist/6371;  // convert dist to angular distance in radians\n    brng = gju.numberToRadius(brng);\n\n    var lon1 = gju.numberToRadius(pt.coordinates[0]);\n    var lat1 = gju.numberToRadius(pt.coordinates[1]);\n\n    var lat2 = Math.asin( Math.sin(lat1)*Math.cos(dist) +\n                          Math.cos(lat1)*Math.sin(dist)*Math.cos(brng) );\n    var lon2 = lon1 + Math.atan2(Math.sin(brng)*Math.sin(dist)*Math.cos(lat1),\n                                 Math.cos(dist)-Math.sin(lat1)*Math.sin(lat2));\n    lon2 = (lon2+3*Math.PI) % (2*Math.PI) - Math.PI;  // normalise to -180..+180º\n\n    return {\n      'type': 'Point',\n      'coordinates': [gju.numberToDegree(lon2), gju.numberToDegree(lat2)]\n    };\n  };\n\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}