{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ga020\\\\OneDrive\\\\Desktop\\\\\\u3000\\u3000\\\\Building IT Systems\\\\frontend\\\\src\\\\GeoJSONMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport geojsonFeature from \"./drawn_shape.json\"; // geojson 파일 경로\nimport leafletPip from 'leaflet-pip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeoJSONMap = () => {\n  _s();\n  useEffect(() => {\n    const map = L.map(\"map\").setView([10.7298, 106.69451], 20);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: \"© OpenStreetMap contributors\"\n    }).addTo(map);\n\n    // L.geoJSON(geojsonFeature, {\n    //     onEachFeature: (feature, layer) => {\n    //         const name = feature.properties.name;\n    //         layer.bindPopup(name);\n    //     }\n    // }).addTo(map);\n\n    // 각 Feature에 스타일 및 팝업 추가하여 지도에 표시\n    // 건물 7의 다각형 생성\n    const building7Polygon = L.geoJSON(geojsonFeature.features.find(feature => feature.properties.name === 'building 7')).getLayers()[0];\n\n    // 다른 건물들의 다각형 생성\n    const otherBuildingPolygons = geojsonFeature.features.filter(feature => feature.properties.name !== 'building 7').map(feature => L.geoJSON(feature).getLayers()[0]);\n\n    // 건물 7과 다른 건물들의 다각형을 모두 추가\n    building7Polygon.addTo(map);\n    otherBuildingPolygons.forEach(polygon => polygon.addTo(map));\n\n    // 건물 7이 다른 건물과 겹치지 않는 부분에 팝업 추가\n    if (!leafletPip.pointInLayer(building7Polygon.toGeoJSON().geometry.coordinates[0][0], L.layerGroup(otherBuildingPolygons)).length) {\n      building7Polygon.bindPopup('Building 7').openPopup();\n    }\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GeoJSONMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GeoJSONMap;\nexport default GeoJSONMap;\nvar _c;\n$RefreshReg$(_c, \"GeoJSONMap\");","map":{"version":3,"names":["React","useEffect","L","geojsonFeature","leafletPip","jsxDEV","_jsxDEV","GeoJSONMap","_s","map","setView","tileLayer","attribution","addTo","building7Polygon","geoJSON","features","find","feature","properties","name","getLayers","otherBuildingPolygons","filter","forEach","polygon","pointInLayer","toGeoJSON","geometry","coordinates","layerGroup","length","bindPopup","openPopup","remove","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ga020/OneDrive/Desktop/　　/Building IT Systems/frontend/src/GeoJSONMap.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport geojsonFeature from \"./drawn_shape.json\"; // geojson 파일 경로\r\nimport leafletPip from 'leaflet-pip';\r\n\r\n\r\nconst GeoJSONMap = () => {\r\n  useEffect(() => {\r\n    const map = L.map(\"map\").setView([10.7298, 106.69451], 20);\r\n\r\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n      attribution: \"© OpenStreetMap contributors\",\r\n    }).addTo(map);\r\n\r\n    // L.geoJSON(geojsonFeature, {\r\n    //     onEachFeature: (feature, layer) => {\r\n    //         const name = feature.properties.name;\r\n    //         layer.bindPopup(name);\r\n    //     }\r\n    // }).addTo(map);\r\n\r\n// 각 Feature에 스타일 및 팝업 추가하여 지도에 표시\r\n// 건물 7의 다각형 생성\r\nconst building7Polygon = L.geoJSON(geojsonFeature.features.find(feature => feature.properties.name === 'building 7')).getLayers()[0];\r\n\r\n// 다른 건물들의 다각형 생성\r\nconst otherBuildingPolygons = geojsonFeature.features\r\n  .filter(feature => feature.properties.name !== 'building 7')\r\n  .map(feature => L.geoJSON(feature).getLayers()[0]);\r\n\r\n// 건물 7과 다른 건물들의 다각형을 모두 추가\r\nbuilding7Polygon.addTo(map);\r\notherBuildingPolygons.forEach(polygon => polygon.addTo(map));\r\n\r\n// 건물 7이 다른 건물과 겹치지 않는 부분에 팝업 추가\r\nif (!leafletPip.pointInLayer(building7Polygon.toGeoJSON().geometry.coordinates[0][0], L.layerGroup(otherBuildingPolygons)).length) {\r\n  building7Polygon.bindPopup('Building 7').openPopup();\r\n}\r\n\r\n    return () => {\r\n      map.remove();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"map\" style={{ height: \"500px\" }}>\r\n      {/* 지도를 렌더링할 div 요소 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeoJSONMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAOC,cAAc,MAAM,oBAAoB,CAAC,CAAC;AACjD,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvBP,SAAS,CAAC,MAAM;IACd,MAAMQ,GAAG,GAAGP,CAAC,CAACO,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC;IAE1DR,CAAC,CAACS,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,KAAK,CAACJ,GAAG,CAAC;;IAEb;IACA;IACA;IACA;IACA;IACA;;IAEJ;IACA;IACA,MAAMK,gBAAgB,GAAGZ,CAAC,CAACa,OAAO,CAACZ,cAAc,CAACa,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,UAAU,CAACC,IAAI,KAAK,YAAY,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpI;IACA,MAAMC,qBAAqB,GAAGnB,cAAc,CAACa,QAAQ,CAClDO,MAAM,CAACL,OAAO,IAAIA,OAAO,CAACC,UAAU,CAACC,IAAI,KAAK,YAAY,CAAC,CAC3DX,GAAG,CAACS,OAAO,IAAIhB,CAAC,CAACa,OAAO,CAACG,OAAO,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpD;IACAP,gBAAgB,CAACD,KAAK,CAACJ,GAAG,CAAC;IAC3Ba,qBAAqB,CAACE,OAAO,CAACC,OAAO,IAAIA,OAAO,CAACZ,KAAK,CAACJ,GAAG,CAAC,CAAC;;IAE5D;IACA,IAAI,CAACL,UAAU,CAACsB,YAAY,CAACZ,gBAAgB,CAACa,SAAS,CAAC,CAAC,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE3B,CAAC,CAAC4B,UAAU,CAACR,qBAAqB,CAAC,CAAC,CAACS,MAAM,EAAE;MACjIjB,gBAAgB,CAACkB,SAAS,CAAC,YAAY,CAAC,CAACC,SAAS,CAAC,CAAC;IACtD;IAEI,OAAO,MAAM;MACXxB,GAAG,CAACyB,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA;IAAK6B,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpC,CAAC;AAEV,CAAC;AAACjC,EAAA,CA3CID,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}